  unsigned runs = nreq / nthreads;
  
  // create matrix for fast updating times in functions
  std::vector<double> res;

  // our run one thread lambda
  auto run_one_thread = [&]() 
  {
    baseline_latencies(runs, res);
  };

  std::vector<std::thread> threads;
  for (unsigned a_counter = 0; a_counter < nthreads; ++a_counter) 
  {
    threads.push_back(std::thread(run_one_thread));
  }

